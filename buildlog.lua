---
--- Created by Frityet.
--- DateTime: 2021-09-15 4:20 p.m.
---
--comment if Luarocks path setup properly
--require("luarocks.loader");
--package.cpath = package.cpath .. ";/usr/local/lib/lua/5.2/?.so";
--local JSON = require("rapidjson");
--
--if arg[1] == "buildnum" then
--    local logs = JSON.load("buildlog.json")
--    io.write(logs[#logs].build_number)
--    return
--end
--
-----@class Log
--local log = {
--    date         = "",
--    build_number = 0,
--    action       = "",
--    runtime      = ""
--};
--
--
-----@type Log[]
--local logs = JSON.load("buildlog.json");
--
--if logs == nil then
--    logs = {
--        [0] = {
--            build_number = 0,
--            date = "nil",
--            action = "nil"
--        }
--    }
--end
--logs[#logs + 1] = {
--    build_number = logs[#logs].build_number + 1;
--    date = os.date("%Y/%m/%d at %H:%M"),
--    action = arg[1]
--};
--
--JSON.dump(logs, "buildlog.json")
--
--local bn = logs[#logs].build_number;
--local bd = logs[#logs].date;
--print("Build " .. bn);
--print("Date: " .. bd);
--print("Action: " .. logs[#logs].action);

---@module xmake
---@field add_rules         function
---@field add_requires      function
---@field set_kind          function
---@field add_cflags        function
---@field add_ldflags       function
---@field add_files         function
---@field add_headerfiles   function
---@field add_includedirs   function
---@field add_files         function
---@field add_packages      function
---@field target            function
---@field target_end        function
---@field includes          function
---@field set_project       function
---@field set_version       function
---@field set_config        function
---@field add_defines       function
---@field toolchain         function
---@field set_sdkdir        function
---@field set_bindir        function
---@field set_toolset       function
---@field set_toolchains    function
---@field toolchain_end     function
---@field set_objectdir     function
---@field set_targetdir     function
---@field task              task
---@field task_end          function
---@field on_run            function
---@field import            function
---@field before_build      function
---@field package           function
---@field package_end       function
---@field set_url           function
---@field on_install        function
---@field git               git 
---@field os                os
---@field json              json

---@class git
---@field clone function
---@field pull function

---@class os
---@field isdir

---@class task
---@field run       function

---@class json
---@field deserialise function

task("update_buildlog")
do
    --import("xmake.core.json")
    --
    --json.deserialise()
end
task_end()
